def generate_playfair_matrix(keyword):
    alphabet = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
    keyword = keyword.upper().replace("J", "I")
    matrix = []
    for char in keyword:
        if char not in matrix and char in alphabet:
            matrix.append(char)
    for char in alphabet:
        if char not in matrix:
            matrix.append(char)
    return [matrix[i:i+5] for i in range(0, 25, 5)]

def find_position(matrix, char):
    for row in range(5):
        for col in range(5):
            if matrix[row][col] == char:
                return row, col
    return None

def decrypt_playfair(ciphertext, matrix):
    plaintext = ""
    ciphertext = ciphertext.upper().replace("J", "I")
    pairs = [ciphertext[i:i+2] for i in range(0, len(ciphertext), 2)]
    for pair in pairs:
        if len(pair) < 2:
            continue
        row1, col1 = find_position(matrix, pair[0])
        row2, col2 = find_position(matrix, pair[1])
        if row1 is None or row2 is None:
            continue
        if row1 == row2:
            plaintext += matrix[row1][(col1 - 1) % 5]
            plaintext += matrix[row2][(col2 - 1) % 5]
        elif col1 == col2:
            plaintext += matrix[(row1 - 1) % 5][col1]
            plaintext += matrix[(row2 - 1) % 5][col2]
        else:
            plaintext += matrix[row1][col2]
            plaintext += matrix[row2][col1]
    return plaintext

# Example usage:
keyword = "PLAYFAIR EXAMPLE"
ciphertext = "KXJEYUREBEZWEHEWRYTUHEYFSKREHEGOYFIWTTTUOLKSYCAJPOBOTEIZONTXBYBNTGONEYCUEZWRGDSONSXBOUYWRHEBAAHYUSEDQ"

matrix = generate_playfair_matrix(keyword)
decrypted_text = decrypt_playfair(ciphertext, matrix)

print("Playfair Matrix:")
for row in matrix:
    print(row)

print(f"\nCiphertext: {ciphertext}")
print(f"Decrypted Text: {decrypted_text}")
//Playfair Matrix:
['P', 'L', 'A', 'Y', 'F']
['I', 'R', 'E', 'X', 'M']
['B', 'C', 'D', 'G', 'H']
['K', 'N', 'O', 'Q', 'S']
['T', 'U', 'V', 'W', 'Z']

Ciphertext: KXJEYUREBEZWEHEWRYTUHEYFSKREHEGOYFIWTTTUOLKSYCAJPOBOTEIZONTXBYBNTGONEYCUEZWRGDSONSXBOUYWRHEBAAHYUSEDQ
Decrypted Text: QIMRLWIRDIWVMDXVXLZTDMAYQSIRDMDQAYXTZZZTNASQLGPEAKDKVIMTNKWIGPCKWBNKXARNMVUXDCQNKQIGNVWQMCIDLLGFZNAE
